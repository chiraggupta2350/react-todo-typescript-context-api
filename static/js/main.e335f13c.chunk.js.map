{"version":3,"sources":["TodosContext/TodoContext.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["contextDefaultValues","todos","addTodo","deleteTodo","editTodo","TodosContext","createContext","TodosProvider","children","useState","setTodos","Provider","value","newTodo","i","updatevalue","filter","elem","id","item","map","Todos","useContext","todo","className","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"oMAGMA,EAA0C,CAC9CC,MAAO,GACPC,QAAS,aACTC,WAAY,aACZC,SAAU,cAGCC,EAAeC,wBAC1BN,GAsCaO,EAnCW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,EAA0BC,mBAAmBT,EAAqBC,OAAlE,mBAAOA,EAAP,KAAcS,EAAd,KACA,EAAgCD,qBAAhC,6BAmBA,OACE,cAACJ,EAAaM,SAAd,CACEC,MAAO,CACLX,QACAC,QArBU,SAACW,GAAD,OAAqBH,GAAS,SAACT,GAAD,4BAAeA,GAAf,CAAsBY,QAsB9DV,WArBa,SAACW,GAClB,IAAMC,EAAcd,EAAMe,QAAO,SAACC,EAAMC,GACtC,OAAOJ,GAAKI,KAEdR,EAASK,IAkBLX,SAhBW,SAACU,GAChB,IAAMK,EAAOlB,EAAMmB,KAAI,SAACH,EAAMC,GAK5B,OAHIA,IAAOJ,IACTG,EAAO,iBAEFA,KAETP,EAASS,KAGT,SAQGX,KCzCDa,EAAQ,WACZ,MAA+CC,qBAAWjB,GAAlDJ,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAAQC,EAAvB,EAAuBA,WAAWC,EAAlC,EAAkCA,SAElC,OACE,gCACE,8BACGH,EAAMmB,KAAI,SAACG,EAAMT,GAAP,OACT,gCAAcS,EAAK,mBAAGC,UAAU,uBAAuBC,QAAS,kBAAItB,EAAWW,MAC/E,mBAAGU,UAAU,kBAAkBC,QAAS,kBAAIrB,EAASU,QAD3CA,QAId,wBAAQW,QAAS,kBAAMvB,EAAQ,aAA/B,0BAKS,oBACb,cAAC,EAAD,UACE,cAAC,EAAD,OCPWwB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.e335f13c.chunk.js","sourcesContent":["import React, { createContext, useState, FC } from \"react\";\r\nimport { TodosContextState } from \"./types\";\r\n\r\nconst contextDefaultValues: TodosContextState = {\r\n  todos: [],\r\n  addTodo: () => { },\r\n  deleteTodo: () => { },\r\n  editTodo: () => { }\r\n};\r\n\r\nexport const TodosContext = createContext<TodosContextState>(\r\n  contextDefaultValues\r\n);\r\n\r\nconst TodosProvider: FC = ({ children }) => {\r\n  const [todos, setTodos] = useState<string[]>(contextDefaultValues.todos);\r\n  const [editItem, setEditItem] = useState<Number>()\r\n\r\n  const addTodo = (newTodo: string) => setTodos((todos) => [...todos, newTodo]);\r\n  const deleteTodo = (i: number) => {\r\n    const updatevalue = todos.filter((elem, id) => {\r\n      return i != id;\r\n    })\r\n    setTodos(updatevalue)\r\n  }\r\n  const editTodo = (i: number) => {\r\n    const item = todos.map((elem, id) => {\r\n\r\n      if (id === i) {\r\n        elem = \"string change\"\r\n      }\r\n      return elem;\r\n    })\r\n    setTodos(item)\r\n  }\r\n  return (\r\n    <TodosContext.Provider\r\n      value={{\r\n        todos,\r\n        addTodo,\r\n        deleteTodo,\r\n        editTodo\r\n      }}\r\n    >\r\n      {children}\r\n    </TodosContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TodosProvider;","import React, { useContext } from \"react\";\nimport TodosProvider, { TodosContext } from \"./TodosContext/TodoContext\";\n\nconst Todos = () => {\n  const { todos, addTodo,deleteTodo,editTodo } = useContext(TodosContext);\n  \n  return (\n    <div>\n      <div>\n        {todos.map((todo, i) => (\n          <div key={i}>{todo}<i className=\"far fa-trash-alt btn\" onClick={()=>deleteTodo(i)}></i>\n          <i className=\"far fa-edit btn\" onClick={()=>editTodo(i)}></i></div>\n        ))}\n      </div>\n      <button onClick={() => addTodo(\"new todo\")}>add todo</button>\n    </div>\n  );\n};\n\nexport default () => (\n  <TodosProvider>\n    <Todos />\n  </TodosProvider>\n);","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}